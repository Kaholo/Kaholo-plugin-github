{
  "name": "Github",
  "viewName": "GitHub",
  "type": "executer",
  "execProgram": "node",
  "main": "app.js",
  "exposeRoute": true,
  "imgUrl": "logo.png",
  "version": "2.0.0",
  "keywords": [
    "github api",
    "git",
    "repository",
    "commit",
    "pull request",
    "webhook",
    "branch",
    "status",
    "source",
    "version",
    "control"
  ],
  "category": "Source Control",
  "description": "Cloud-based version control platform using Git",
  "auth": {
    "authId": "githubToken",
    "params": [
      {
        "name": "token",
        "viewName": "Authentication Token",
        "type": "vault",
        "description": "a GitHub token for authentication with the GitHub API",
        "placeholder": "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",
        "learnUrl": "https://cloud.google.com/docs/authentication/production"
      }
    ]
  },
  "methods": [
    {
      "name": "sendStatus",
      "viewName": "Create Commit Status",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository where commit was made",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository where commit was made",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories"
        },
        {
          "name": "branch",
          "viewName": "Branch",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listBranchesAuto",
          "description": "Branch of repository where commit was made",
          "placeholder": "branchname",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches"
        },
        {
          "name": "sha",
          "viewName": "Commit",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listCommitsAuto",
          "description": "Commit for which status will be created",
          "placeholder": "Commit Title",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks"
        },
        {
          "name": "state",
          "viewName": "State",
          "type": "options",
          "options": [
            {
              "id": "error",
              "name": "Error"
            },
            {
              "id": "failure",
              "name": "Failure"
            },
            {
              "id": "pending",
              "name": "Pending"
            },
            {
              "id": "success",
              "name": "Success"
            }
          ],
          "description": "Status to assign to the commit",
          "placeholder": "Error | Failure | Pending | Success",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks"
        },
        {
          "name": "linkedUrl",
          "viewName": "Details URL",
          "type": "string",
          "description": "Optional URL to link as \"Details\" for commit status",
          "placeholder": "https://sonarcube/reports/codeanalysis-20519928.pdf",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks"
        },
        {
          "name": "description",
          "viewName": "Description",
          "type": "text",
          "description": "Optional description, e.g. the reason the status was assigned",
          "placeholder": "Code analysis failed - see Details for report",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks"
        },
        {
          "name": "context",
          "viewName": "Context",
          "type": "string",
          "description": "Optional context label for combined statuses - default value is 'default'.",
          "placeholder": "code_analysis",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks"
        }
      ]
    },
    {
      "name": "createRepo",
      "viewName": "Create New Repository",
      "params": [
        {
          "name": "name",
          "viewName": "Repository Name",
          "type": "string",
          "required": true,
          "description": "Name for repository to be created",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/get-started/quickstart/create-a-repo"
        },
        {
          "name": "description",
          "viewName": "Description",
          "type": "text",
          "description": "A short description of the new repository",
          "placeholder": "a new repo for myproject",
          "learnUrl": "https://docs.github.com/en/get-started/quickstart/create-a-repo"
        },
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization that will have owner rights to the repository",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "private",
          "viewName": "Private",
          "type": "boolean",
          "description": "Make the repository a private one.",
          "learnUrl": "https://docs.github.com/en/get-started/quickstart/create-a-repo"
        },
        {
          "name": "autoInit",
          "viewName": "Auto Init",
          "type": "boolean",
          "description": "Create an initial commit with an empty README.",
          "learnUrl": "https://docs.github.com/en/get-started/quickstart/create-a-repo"
        },
        {
          "name": "gitignoreTemplate",
          "viewName": "GitIgnore Template",
          "type": "string",
          "description": "Include .gitignore of specified language or platform template.",
          "placeholder": "Java",
          "learnUrl": "https://docs.github.com/en/rest/reference/gitignore"
        }
      ]
    },
    {
      "name": "createRepoFromTemplate",
      "viewName": "Create Repository From Template",
      "params": [
        {
          "name": "templateRepo",
          "viewName": "Template Repository Name",
          "type": "string",
          "required": true,
          "description": "Name of a template repository to use",
          "placeholder": "myuser/myrepotemplate",
          "learnUrl": "https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"
        },
        {
          "name": "name",
          "viewName": "New Repository Name",
          "type": "string",
          "required": true,
          "description": "Name of the repository to be created",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"
        },
        {
          "name": "description",
          "viewName": "Description",
          "type": "text",
          "description": "Description of the new repository",
          "placeholder": "This is a dev repository",
          "learnUrl": "https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"
        },
        {
          "name": "owner",
          "viewName": "New Repository Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization that will have owner rights to the repository",
          "placeholder": "owner_name",
          "learnUrl": "https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"
        },
        {
          "name": "private",
          "viewName": "Private",
          "type": "boolean",
          "description": "Make the repository a private one.",
          "learnUrl": "https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template"
        }
      ]
    },
    {
      "name": "createRepoWebhook",
      "viewName": "Create Repository Webhook",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization that owns the repository where webhook is to be created",
          "placeholder": "myuser",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository where webhook will be created",
          "placeholder": "myrepo1",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "events",
          "viewName": "Subscribed Events",
          "type": "text",
          "required": true,
          "description": "List of events that will activate the webhook, one per line",
          "placeholder": "push\npull_request",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
        },
        {
          "name": "url",
          "viewName": "Webhook URL",
          "type": "string",
          "required": true,
          "description": "URL to which the webhook will send its payload",
          "placeholder": "http://example.kaholo.io/webhook/github/push",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "contentType",
          "viewName": "Webhook Content Type",
          "type": "options",
          "options": [
            {
              "id": "json",
              "name": "JSON"
            },
            {
              "id": "form",
              "name": "x-www-form-urlencoded"
            }
          ],
          "description": "Select payload content type",
          "default": "json",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "secret",
          "viewName": "Secret",
          "type": "vault",
          "description": "Secret for validation of the webhook",
          "placeholder": "exampleValue123",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "insecureSsl",
          "viewName": "Disable SSL Verification",
          "type": "boolean",
          "description": "Skip verification of Webhook URL's SSL certificate.",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "notActive",
          "viewName": "Leave Webhook Inactive",
          "type": "boolean",
          "description": "Configure webhook but leave delivery disabled.",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        }
      ]
    },
    {
      "name": "createOrganizationWebhook",
      "viewName": "Create Organization Webhook",
      "params": [
        {
          "name": "org",
          "viewName": "Organization",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOrgsAuto",
          "description": "Organization where the webhook will be created",
          "placeholder": "myOrganization",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "events",
          "viewName": "Subscribed Events",
          "type": "text",
          "required": true,
          "description": "List of events that will activate the webhook, one per line",
          "placeholder": "push\npull_request",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads"
        },
        {
          "name": "url",
          "viewName": "Webhook URL",
          "type": "string",
          "required": true,
          "description": "URL to which the webhook will send its payload",
          "placeholder": "http://example.kaholo.io/webhook/github/push",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "contentType",
          "viewName": "Webhook Content Type",
          "type": "options",
          "options": [
            {
              "id": "json",
              "name": "JSON"
            },
            {
              "id": "form",
              "name": "x-www-form-urlencoded"
            }
          ],
          "description": "Select payload content type",
          "default": "json",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "secret",
          "viewName": "Secret",
          "type": "vault",
          "description": "Secret for validation of the webhook",
          "placeholder": "exampleSecret123",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "insecureSsl",
          "viewName": "Disable SSL Verification",
          "type": "boolean",
          "description": "Skip verification of Webhook URL's SSL certificate.",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "username",
          "viewName": "Webhook Username",
          "type": "string",
          "description": "Optional username for webhook authentication",
          "placeholder": "myuser",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "password",
          "viewName": "Webhook Password",
          "type": "vault",
          "description": "Optional password for webhook authentication",
          "placeholder": "myPass1234!",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        },
        {
          "name": "notActive",
          "viewName": "Leave Webhook Inactive",
          "type": "boolean",
          "description": "Configure webhook but leave delivery disabled.",
          "learnUrl": "https://docs.github.com/en/developers/webhooks-and-events/webhooks/creating-webhooks"
        }
      ]
    },
    {
      "name": "listOrgs",
      "viewName": "List Connected Organizations",
      "params": [
        {
          "name": "bigQuery",
          "viewName": "Execute Big Query",
          "description": "List more than the first 100 Organizations.",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "listRepos",
      "viewName": "List Repositories",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repositories to list",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/rest/reference/repos"
        },
        {
          "name": "repoType",
          "viewName": "Type",
          "description": "Type of the repositories to list",
          "learnUrl": "https://docs.github.com/en/rest/reference/repos#list-repositories-for-the-authenticated-user",
          "default": "all",
          "type": "options",
          "options": [
            {
              "id": "all",
              "name": "All"
            },
            {
              "id": "forks",
              "name": "Forks"
            },
            {
              "id": "public",
              "name": "Public"
            },
            {
              "id": "private",
              "name": "Private"
            },
            {
              "id": "archived",
              "name": "Archived"
            },
            {
              "id": "mirror",
              "name": "Mirror"
            }
          ]
        },
        {
          "name": "bigQuery",
          "viewName": "Execute Big Query",
          "description": "List more than the first 100 repositories.",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "listBranches",
      "viewName": "List Branches",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository for which branches will be listed",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/viewing-branches-in-your-repository"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository for which branches will be listed",
          "placeholder": "myrepo1",
          "learnUrl": "https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/viewing-branches-in-your-repository"
        },
        {
          "name": "bigQuery",
          "viewName": "Execute Big Query",
          "description": "List more than the first 100 branches.",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "listCommits",
      "viewName": "List Commits",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository for which commits will be listed",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/search-github/searching-on-github/searching-commits"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository for which commits will be listed",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/search-github/searching-on-github/searching-commits"
        },
        {
          "name": "branch",
          "viewName": "Branch",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listBranchesAuto",
          "description": "Branch for which commits will be listed",
          "placeholder": "branchname",
          "learnUrl": "https://docs.github.com/en/search-github/searching-on-github/searching-commits"
        },
        {
          "name": "since",
          "viewName": "Since",
          "description": "List only commits made after this date (format YYYY-MM-DDTHH:MM:SSZ).",
          "placeholder": "2023-02-17T13:23:21Z",
          "learnUrl": "https://docs.github.com/en/rest/reference/commits#list-commits",
          "type": "string"
        },
        {
          "name": "bigQuery",
          "viewName": "Execute Big Query",
          "description": "List more than the first 100 commits.",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "name": "getAuthenticatedUser",
      "viewName": "Get Authenticated User",
      "params": []
    },
    {
      "name": "getRepository",
      "viewName": "Get Repository Info",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository about which to return information",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories"
        }
      ]
    },
    {
      "name": "getPullRequest",
      "viewName": "Get Pull Request",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository of the pull request",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository of the pull request",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories"
        },
        {
          "name": "pr",
          "viewName": "Pull Request",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listPRAuto",
          "description": "Pull request about which to get information",
          "placeholder": "Pull Request Title",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"
        }
      ]
    },
    {
      "name": "postPRComment",
      "viewName": "Post Comment On Pull Request",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository of the pull request",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository of the pull request",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories"
        },
        {
          "name": "pr",
          "viewName": "Pull Request",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listPRAuto",
          "description": "Pull request where comment will be posted",
          "placeholder": "Pull Request Title",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"
        },
        {
          "name": "comment",
          "viewName": "Comment",
          "type": "text",
          "required": true,
          "description": "Comment to be posted",
          "placeholder": "Please merge this PR to v3.0 RC",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request"
        }
      ]
    },
    {
      "name": "setBranchProtectionRule",
      "viewName": "Set Branch Protection Rule",
      "params": [
        {
          "name": "owner",
          "viewName": "Owner",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listOwnersAuto",
          "description": "User or organization owning the repository where protection rule will be set",
          "placeholder": "myusername",
          "learnUrl": "https://docs.github.com/en/authentication"
        },
        {
          "name": "repo",
          "viewName": "Repository",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listReposAuto",
          "description": "Repository where protection rule will be set",
          "placeholder": "myrepo",
          "learnUrl": "https://docs.github.com/en/repositories"
        },
        {
          "name": "branch",
          "viewName": "Branch",
          "type": "autocomplete",
          "required": true,
          "autocompleteType": "function",
          "functionName": "listBranchesAuto",
          "description": "Branch where protection rule will be set",
          "placeholder": "branchname",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches"
        },
        {
          "name": "contexts",
          "viewName": "Required Checks",
          "type": "text",
          "description": "List of required checks, one per line",
          "placeholder": "ci-build\ncode-analysis",
          "learnUrl": "https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/commenting-on-a-pull-request"
        },
        {
          "name": "dismissStaleReviews",
          "viewName": "Dismiss Stale Reviews",
          "type": "boolean",
          "description": "Enable to automatically dismiss approving reviews when there is a new commit.",
          "learnUrl": "https://docs.github.com/en/rest/reference/branches#update-branch-protection"
        },
        {
          "name": "requireOwnerReview",
          "viewName": "Require Owner Review",
          "type": "boolean",
          "description": "Block merges without code owner review",
          "learnUrl": "https://docs.github.com/en/rest/reference/branches#update-branch-protection"
        },
        {
          "name": "approvingCount",
          "viewName": "Approving Count",
          "type": "string",
          "description": "Number of reviewers required to approve a pull request (0-6)",
          "learnUrl": "https://docs.github.com/en/rest/reference/branches#update-branch-protection"
        }
      ]
    }
  ]
}
